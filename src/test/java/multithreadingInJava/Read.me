
What is thread safe or Synchronized?
• Thread safety is very important, and it is the process to make our program safe to use in multi-threaded
environment, there are different ways through which we can make our program thread safe.
• Synchronization is the easiest and most widely used tool for thread safety.
• JVM guarantees that synchronized code will be executed by only one thread at a time.
• JAVA keyword synchronized is used to create synchronized code and internally it uses locks
on Object or Class to make sure only one thread is executing the synchronized code.
• I mean Java synchronization works on locking and unlocking of the resource,
so no thread enters into synchronized code.
• We can use synchronized keyword in two ways, one is to make a complete method synchronized and
other way is to create synchronized block.
========================

Multithreading in Java

Multithreading is a Java feature that allows
concurrent execution of two or more parts of a program for
maximum utilization of CPU. Each part of such program is called a thread.
So, threads are light-weight processes within a process.

Threads can be created by using two mechanisms :
1. Extending the Thread class
2. Implementing the Runnable Interface


1.Thread creation by extending the Thread class

We create a class that extends the java.lang.Thread class.
This class overrides the run() method available in the Thread class.
A thread begins its life inside run() method.
We create an object of our new class and
call start() method to start the execution of a thread.
Start() invokes the run() method on the Thread object.


2.Thread creation by implementing the Runnable Interface:

We create a new class which implements java.lang.
Runnable interface and override run() method.
Then we instantiate a Thread object and call start() method on this object.